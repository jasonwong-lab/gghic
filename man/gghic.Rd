% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gghic.R
\name{gghic}
\alias{gghic}
\title{gghic}
\usage{
gghic(
  data = NULL,
  score_column = "balanced",
  scale_method = log10,
  rasterise = FALSE,
  dpi = 300,
  ideogram = FALSE,
  ideogram_width_ratio = 1/30,
  ideogram_fontsize = 10,
  ideogram_colour = "red",
  ideogram_fill = "#FFE3E680",
  annotation = FALSE,
  annotation_width_ratio = 1/50,
  annotation_spacing_ratio = 1/3,
  annotation_fontsize = 10,
  annotation_colour = "#48CFCB",
  annotation_fill = "#48CFCB",
  track = FALSE,
  track_width_ratio = 1/20,
  track_spacing_ratio = 1/2,
  track_fill = "black",
  track_fontsize = 5,
  expand_xaxis = FALSE,
  expand_left = NULL,
  expand_right = NULL,
  ...
)
}
\arguments{
\item{data}{Either a HiCExperiment object, or a GInteractions object, or a
tibble/data.frame.}

\item{score_column}{The column name of which the score is calculated.
Default is \code{"balanced"}.}

\item{scale_method}{The function to scale the score. Default is \code{log10}.}

\item{rasterise}{Whether to rasterise the plot of Hi-C or not.
Default is \code{FALSE}.}

\item{dpi}{The resolution of the rasterised plot. Default is \code{300}.}

\item{ideogram}{Whether to add ideogram or not. Default is \code{FALSE}.}

\item{ideogram_width_ratio}{The width ratio of the ideogram.
Default is \code{1/30}.}

\item{ideogram_fontsize}{The font size of the ideogram. Default is \code{10}.}

\item{ideogram_colour}{The color of the ideogram. Default is \code{"red"}.}

\item{ideogram_fill}{The fill color of the highlighted region on the
ideogram. Default is \code{"#FFE3E680"}.}

\item{annotation}{Whether to add annotation or not. Default is \code{FALSE}.}

\item{annotation_width_ratio}{The width ratio of the annotation.
Default is \code{1/50}.}

\item{annotation_spacing_ratio}{The spacing ratio of the annotation.
Default is \code{1/3}.}

\item{annotation_fontsize}{The font size of the annotation. Default is \code{10}.}

\item{annotation_colour}{The color of the annotation. Default is \code{"#48CFCB"}.}

\item{annotation_fill}{The fill color of the annotation.
Default is \code{"#48CFCB"}.}

\item{track}{Whether to add track or not. Default is \code{FALSE}.}

\item{track_width_ratio}{The width ratio of the track. Default is \code{1/20}.}

\item{track_spacing_ratio}{The spacing ratio of the track. Default is \code{1/2}.}

\item{track_fill}{The fill color of the track. Default is \code{"black"}.}

\item{track_fontsize}{The font size of the track. Default is \code{5}.}

\item{expand_xaxis}{Whether to expand the x-axis or not. Default is \code{FALSE}.}

\item{expand_left}{The left expansion of the x-axis. Default is \code{NULL}.}

\item{expand_right}{The right expansion of the x-axis. Default is \code{NULL}.}

\item{...}{
  Arguments passed on to \code{\link[=geom_hic]{geom_hic}}, \code{\link[=geom_ideogram]{geom_ideogram}}, \code{\link[=geom_annotation]{geom_annotation}}, \code{\link[=geom_track]{geom_track}}
  \describe{
    \item{\code{draw_boundary}}{Whether to draw the boundary line or not when plotting
multiple chromosomes. Default is \code{TRUE}.}
    \item{\code{boundary_colour}}{The color of the boundary line. Default is \code{"black"}.}
    \item{\code{linetype}}{The line type of the boundary line. Default is \code{"dashed"}.}
    \item{\code{stat}}{The statistical transformation to use on the data for this layer.
When using a \verb{geom_*()} function to construct a layer, the \code{stat}
argument can be used the override the default coupling between geoms and
stats. The \code{stat} argument accepts the following:
\itemize{
\item A \code{Stat} ggproto subclass, for example \code{StatCount}.
\item A string naming the stat. To give the stat as a string, strip the
function name of the \code{stat_} prefix. For example, to use \code{stat_count()},
give the stat as \code{"count"}.
\item For more information and other ways to specify the stat, see the
\link[ggplot2:layer_stats]{layer stat} documentation.
}}
    \item{\code{position}}{A position adjustment to use on the data for this layer. This
can be used in various ways, including to prevent overplotting and
improving the display. The \code{position} argument accepts the following:
\itemize{
\item The result of calling a position function, such as \code{position_jitter()}.
This method allows for passing extra arguments to the position.
\item A string naming the position adjustment. To give the position as a
string, strip the function name of the \code{position_} prefix. For example,
to use \code{position_jitter()}, give the position as \code{"jitter"}.
\item For more information and other ways to specify the position, see the
\link[ggplot2:layer_positions]{layer position} documentation.
}}
    \item{\code{na.rm}}{If \code{FALSE}, the default, missing values are removed with
a warning. If \code{TRUE}, missing values are silently removed.}
    \item{\code{show.legend}}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}
    \item{\code{inherit.aes}}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}
    \item{\code{genome}}{The genome name. Default is \code{"hg19"}.}
    \item{\code{highlight}}{Whether to highlight the boundary of the chromosome.
Default is \code{TRUE}.}
    \item{\code{length_ratio}}{The ratio of the length of each chromosome ideogram
relative to the width of the Hi-C plot. Default is \code{0.8}.}
    \item{\code{txdb}}{The TxDb object. Default is \code{NULL}.}
    \item{\code{tx2gene}}{An optional data frame or tibble that maps transcript
information to gene information. It should include the following columns:
\itemize{
\item chrom: Chromosome number or name.
\item gene_id: Entrez gene ID.
\item gene_symbol: Common symbol or name of the gene.
\item tx_id: Entrez transcript ID.
\item tx_name: Name of the transcript.
\item gene_type: Type or classification of the gene.
\item tx_type: Type or classification of the transcript.
}}
    \item{\code{gtf_path}}{The path to the GTF file, which is used to generate \code{txdb}
and \code{tx2gene}. Generated files are saved in the cache directory.
Default is \code{NULL}.}
    \item{\code{maxgap}}{The maximum gap between genes to be drawn in the same line.
Default is \code{-1}.}
    \item{\code{include_ncrna}}{Whether to include ncRNA or not. Default is \code{TRUE}.}
    \item{\code{style}}{The style of the gene model track, which can be \code{"basic"}
or \code{"arrow"}. Default is \code{"basic"}.}
    \item{\code{gene_symbols}}{A character vector of gene symbols to be included only.
Default is \code{NULL}.}
    \item{\code{fontsize}}{The font size of the gene symbols. Default is \code{10}.}
    \item{\code{data_paths}}{The paths to the sequencing data files. Default is \code{NULL}.}
    \item{\code{data_granges}}{The GRanges object of the sequencing data.
Default is \code{NULL}.}
    \item{\code{data_range}}{The range of the x axis. It can be \code{"auto"}, \code{"maximum"},
or a number (vector). Default is \code{"auto"}.}
  }}
}
\value{
A ggplot object.
}
\description{
A ggplot2 wrapper of \code{\link[=geom_hic]{geom_hic()}}, \code{\link[=geom_ideogram]{geom_ideogram()}},
\code{\link[=geom_annotation]{geom_annotation()}}, and \code{\link[=geom_track]{geom_track()}} for easy visualisation of
Hi-C/-like data.
}
\examples{
\dontrun{
library(gghic)
library(dplyr)
library(HiCExperiment)
library(InteractionSet)
library(scales)
library(scales)

cf <- HiCExperiment::CoolFile(
  system.file("extdata", "cooler", "chr4_11-5kb.cool", package = "gghic")
)
hic <- HiCExperiment::import(cf)

gis <- InteractionSet::interactions(hic)
gis$score <- log10(gis$balanced)
x <- tibble::as_tibble(gis)
scores <- x$score[
  InteractionSet::pairdist(gis) != 0 &
    !is.na(InteractionSet::pairdist(gis) != 0)
]
scores <- scores[!is.na(scores) & !is.infinite(scores)]
x$score <- scales::oob_squish(x$score, c(min(scores), max(scores)))

p <- x_5 |>
  dplyr::filter(
    center1 > 10000000 & center1 < 11000000 &
      center2 > 10000000 & center2 < 11000000
  ) |>
  gghic(
    draw_boundary = TRUE,

    ideogram = TRUE, genome = "hg19", highlight = TRUE,
    ideogram_fontsize = 7, ideogram_width_ratio = 0.08,

    annotation = TRUE, include_ncrna = FALSE, gtf_path = path_gtf,
    style = "arrow", maxgap = 100000, annotation_fontsize = 5,
    annotation_width_ratio = 0.05,

    expand_xaxis = TRUE
  )
}
}
